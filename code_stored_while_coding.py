def train_model():
    model = MLPRegressor(hidden_layer_sizes=(20,), max_iter=500, random_state=42)
    print("Training the neural network model...")
    model.fit(X_train, Y_train)
    print("data is trained")
    print("test data:", X_test)
    v = model.predict(X_test)
    print("prediction:", v)
    r2 = r2_score(Y_test, v)
    mae = mean_absolute_error(Y_test, v)
    print(f"RÂ² score: {r2:.3f}")
    print(f"Mean Absolute Error: {mae:.3f}")
    # plot loss curve instead of tree
    plt.figure(figsize=(10, 5))
    plt.plot(model.loss_curve_)
    plt.title("MLPRegressor Loss Curve")
    plt.xlabel("Iterations")
    plt.ylabel("Loss")
    plt.show()

train_model()